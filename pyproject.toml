[project]
name = "pitaya"
version = "0.3.0"
description = "Pitaya â€” an orchestrator of AI coding agents (e.g., Claude Code, Codex CLI) with pluggable and custom strategies"
readme = "README.md"
requires-python = "==3.13.*"
dependencies = [
    "docker>=7.1.0",
    "rich>=14.0.0",
    "click>=8.1.0",
    "python-dotenv>=1.0.0",
    "typing-extensions>=4.12.0",
    "aiofiles>=24.1.0",
    "watchdog>=6.0.0",
    "pyyaml>=6.0.2",
]
license = { file = "LICENSE" }
keywords = ["ai", "coding", "agents", "automation", "developer-tools", "tui", "docker", "orchestrator", "claude-code", "codex-cli"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Build Tools",
  "Topic :: Software Development :: Code Generators",
]
authors = [
  { name = "TON Studio" }
]
maintainers = [
  { name = "TON Studio" }
]
urls = { "Repository" = "https://github.com/tact-lang/pitaya", "Issues" = "https://github.com/tact-lang/pitaya/issues" }

[project.scripts]
pitaya = "src.cli:main"
pitaya-tui = "src.tui.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.hatch.build.targets.sdist]
exclude = [
  "logs",
  "results",
  "pitaya_state",
  ".venv",
  ".ruff_cache",
  ".mypy_cache",
  ".pytest_cache",
  "dist",
]

[tool.uv]
dev-dependencies = [
    "mypy>=1.13.0",
    "black>=24.10.0",
    "ruff>=0.8.0",
    "pytest>=8.3.0",
    "pytest-asyncio>=0.25.0",
    "types-pyyaml>=6.0.12.20250516",
    "types-aiofiles>=24.1.0.20250708",
]
